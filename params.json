{
  "name": "Login-boilerplate",
  "tagline": " boilerplate to build login based applications on, integrated roles system",
  "body": "## Login-boilerplate\r\nBoilerplate to build login based applications on, integrated roles system its build on nodejs and mongodb.\r\n\r\nIt's fits very well with my other project <a href=\"https://github.com/sp90/prototype-builder\">prototype-builder</a> which is just a basic html app\r\n\r\n\r\n### Feature list\r\n\r\n* Token based login via JWT\r\n* Activation email via mailgun (can easily be customized to support your provider)\r\n* Reset password email via mailgun\r\n* Handlebar mail templates\r\n* Admin user support\r\n* Roles\r\n* Picking data that we need from the req.body\r\n* Sample config file to configurate the lot\r\n* Centralised error handling (binding a db would be nice to see when error happens)\r\n* CSRF token support (using cookies, so no frontend dev needed)\r\n\r\n### TODO's\r\n\r\n* Two factor auth\r\n\t- Google authenticator \r\n\t- SMS code\r\n\t- CLEF support\r\n* Thirdparty app support\r\n\t- Facebook\r\n\t- Linkedin\r\n\t- Twitter\r\n\t- Google\r\n* New relic integration\r\n* Dockerfile\r\n* Frontend lib to easy utilize this user system\r\n* Error logging (Only to write out stats, so that you might Improve UX)\r\n* Add postman collection to the repo\r\n* Write tests\r\n* Add code linting\r\n* Move each user into a module so each module does 1 thing\r\n\r\n### Contributions\r\n\r\nStart by writing an issue and we can discuss the use case of it maybe im working on it\r\nOtherwise feel free to share",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}